name: Build and Test

on:
  push:
    branches: [ main ]
    tags: [ 'v*' ]
  pull_request:
    branches: [ main ]

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

permissions:
  contents: write  # Required to create releases

jobs:
  lint-and-test:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Set up Go
        uses: actions/setup-go@v4
        with:
          go-version: '1.21'
          cache: true
      - name: Install dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y libfuse-dev
      - name: Test
        run: make test
      - name: Clean Go Module Cache
        run: sudo rm -rf ~/go/pkg/mod
        if: always()
      - name: Run golangci-lint
        uses: golangci/golangci-lint-action@v4
        with:
          version: v1.55.2
          args: --timeout=5m --out-format=colored-line-number
          only-new-issues: false

  release:
    needs: lint-and-test
    if: startsWith(github.ref, 'refs/tags/')
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Set up Go
        uses: actions/setup-go@v4
        with:
          go-version: '1.21'
          cache: true
      - name: Install dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y libfuse-dev
      - name: Build Release Binary
        env:
          GOOS: linux
          GOARCH: amd64  # Explicitly set to amd64 only
          CGO_ENABLED: 1
        run: |
          make build
          tar czf vmapfs-linux-amd64.tar.gz -C bin vmapfs
      - name: Generate Release Notes
        run: |
          echo "## Changes since last release" > release_notes.md
          git log $(git describe --tags --abbrev=0 HEAD^)..HEAD --pretty=format:"* %s" >> release_notes.md
      - name: Create Release
        uses: softprops/action-gh-release@v1
        with:
          files: vmapfs-linux-amd64.tar.gz
          body_path: release_notes.md
          draft: false
          prerelease: contains(github.ref, '-rc') || contains(github.ref, '-beta') || contains(github.ref, '-alpha')
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}